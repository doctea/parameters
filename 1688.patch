diff --git a/include/parameters/Parameter.h b/include/parameters/Parameter.h
index d1f07cc..abd4fbc 100644
--- a/include/parameters/Parameter.h
+++ b/include/parameters/Parameter.h
@@ -189,8 +189,8 @@ class DoubleParameter : public BaseParameter {
     virtual double get_modulation_value();
 
     #ifdef ENABLE_SCREEN
-        virtual MenuItem *makeControl();
-        virtual LinkedList<MenuItem *> *makeControls();
+        FLASHMEM virtual MenuItem *makeControl();
+        FLASHMEM virtual LinkedList<MenuItem *> *makeControls();
 
         // update the slot's menu control to represent the newly set parameter input source
         void update_slot_amount_control(byte slot, BaseParameterInput *parameter_input);
diff --git a/src/parameters.cpp b/src/parameters.cpp
index f63cafe..a7f8f72 100644
--- a/src/parameters.cpp
+++ b/src/parameters.cpp
@@ -17,7 +17,7 @@
 #include "submenuitem.h"
 
 #ifdef MENU_SIMPLE_PARAMETERS
-    MenuItem *DoubleParameter::makeControl() {
+    FLASHMEM MenuItem *DoubleParameter::makeControl() {
         Serial.printf("DataParameter#makeControl for %s\n", this->label);
 
         //char menu_label[MAX_LABEL_LENGTH];
@@ -66,7 +66,7 @@
     #include "mymenu_items/ParameterInputMenuItems.h"
 
     // just main control, with amounts 
-    MenuItem *DoubleParameter::makeControl() {
+    FLASHMEM MenuItem *DoubleParameter::makeControl() {
         //Serial.printf(F("DataParameter#makeControl for %s\n"), this->label);
         // first set up the submenu to hold the values
         ParameterMenuItem *fullmenuitem = new ParameterMenuItem(this->label, this);
